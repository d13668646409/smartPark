{"version":3,"file":"static/js/976.1717cca8.chunk.js","mappings":"yOACA,QAAiQ,yBAAjQ,EAAiS,oBAAjS,EAA6T,qBAA7T,EAA4V,uBAA5V,EAA8X,wB,aCM9X,MAqHE,EArHcA,IACZ,MAAOC,EAAQC,IAAcC,EAAAA,EAAAA,WAAS,IAC/BC,GAAaC,EAAAA,EAAKC,UAcnBC,EAAQC,UACZN,GAAW,GAEDO,EAAEC,SACDD,EAAEE,SAKXC,EAAAA,GAAQC,QAAQ,4BAChBC,YAAW,KACTd,EAAMe,SAAS,WAAW,GACzB,KAWHC,EAAAA,EAAQC,IAAIC,EAAAA,EAAa,MAAM,CAAEC,QAAS,IAC1CC,aAAaC,QAAQ,WAAYC,KAAKC,UAX3B,CACTC,QAAS,UACTC,OAAQ,IACRC,WAAY,YACZC,eAAgB,YAChBC,GAAI,KACJC,SAAU,WACVC,MAAO,cACPpB,SAAU,kBAIZU,aAAaC,QAAQ,SAAS,SAKhCnB,GAAW,EAAM,EAMnB,OAJA6B,EAAAA,EAAAA,YAAU,KACLf,EAAAA,EAAQgB,IAAId,EAAAA,GAAelB,EAAMe,SAAS,MACxCkB,EAAAA,EAAAA,IAAgB,GACrB,KAEAC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAWC,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAYC,SAAA,EAC1BH,EAAAA,EAAAA,KAAA,OAAKK,IAAKC,EAAQ,SAClBN,EAAAA,EAAAA,KAAA,QAAAG,SAAM,qBAERH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC9BC,EAAAA,EAAAA,MAACjC,EAAAA,EAAI,CACFoC,KAAMrC,EACNsC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IAAMN,SAAA,EAG3BH,EAAAA,EAAAA,KAAC7B,EAAAA,EAAKwC,KAAI,CACNC,MAAM,GACNC,KAAK,WACLC,MAAO,CACL,CAAEC,UAAU,EAAMrC,QAAS,IAC3B,CACEsC,UAAWA,CAACC,EAAGC,KACb,IAAIC,GAAMC,EAAAA,EAAAA,IAAaF,GACvB,OAAIC,EAAIE,WACCC,QAAQC,UAERD,QAAQE,OAAOL,EAAIM,IAC5B,IAGJtB,UAEFH,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJC,UAAW,GACXzB,MAAO,CAAE0B,OAAQ,OAAQC,gBAAiB,OAAQC,UAAW,OAAQC,WAAY,OAAQC,YAAa,QAAUC,YAAY,oBAEhIjC,EAAAA,EAAAA,KAAC7B,EAAAA,EAAKwC,KAAI,CACRC,MAAM,GACNC,KAAK,WACLC,MAAO,CACL,CAAEC,UAAU,EAAMrC,QAAS,IAC3B,CACEsC,UAAWA,CAACC,EAAGC,KACb,IAAI1C,EAAWN,EAAUgE,iBAAiB1D,SACtC2C,GAAMgB,EAAAA,EAAAA,IAAc3D,EAAU0C,GAClC,OAAIC,EAAIE,WACCC,QAAQC,UAERD,QAAQE,OAAOL,EAAIM,IAC5B,IAGJtB,UAEFH,EAAAA,EAAAA,KAAC0B,EAAAA,EAAMU,SAAQ,CACbT,UAAW,GACXzB,MAAO,CAAE0B,OAAQ,OAAQC,gBAAiB,OAAQC,UAAW,OAAQC,WAAY,OAAQC,YAAa,QAAUC,YAAY,oBAEhIjC,EAAAA,EAAAA,KAACqC,EAAAA,GAAM,CAACtE,QAASA,EAASuE,QArGhBC,KAClBrE,EAAUsE,iBAAiBC,MAAKC,IAE9BrE,EAAMqE,EAAI,IACTC,OAAOC,IACRC,QAAQC,IAAI,QAAQ,GACpB,EA+FuD7C,UAAWC,EAAgB6C,KAAK,UAAUC,SAAS,SAAQ7C,SAAC,0BAI/G,C","sources":["webpack://tw-smart-park/./src/views/login/index.module.scss?0727","views/login/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchRight\":\"15px\",\"mainColor\":\"#5b6990\",\"redColorStyle\":\"login_redColorStyle__xFvvX\",\"greenColorStyle\":\"login_greenColorStyle__pgy6c\",\"resetBtnStyle\":\"login_resetBtnStyle__NNRot\",\"removeBtnStyle\":\"login_removeBtnStyle__NGCXu\",\"loginPage\":\"login_loginPage__NUkZ4\",\"main\":\"login_main__fE1cG\",\"title\":\"login_title__dGoxE\",\"formCon\":\"login_formCon__SZb2t\",\"loginBtn\":\"login_loginBtn__RnjXW\"};","import React,{useEffect,useRef, useState} from \"react\";\r\nimport Cookies from 'js-cookie';\r\nimport { Form, Input, Spin,Button,message } from 'antd'\r\nimport { getInterfaceData, checkPassword, checkAccount } from '@/utils/utils'\r\nimport { closeWebsocket } from '@/utils/webScoket.js'\r\nimport { TOKEN_PARAMS } from '@/base/request';\r\nimport style from './index.module.scss'\r\nconst  Login = (props) =>{\r\n    const [loading,setLoading] = useState(false)\r\n    const [loginForm] = Form.useForm();\r\n    const goTest=()=>{\r\n      Cookies.set(TOKEN_PARAMS,\"123\",{ expires: 7 })\r\n      localStorage.setItem(\"Author\",\"admin\")\r\n      props.navigate('/cockpit')\r\n    }\r\n    const handleSubmit= ()=>{\r\n      loginForm.validateFields().then(res => {\r\n        //成功时操作\r\n        login(res)\r\n      }).catch((error) => {\r\n        console.log(\"error\");\r\n      })\r\n    }\r\n    const login = async(v) => {\r\n      setLoading(true)\r\n      let params = {\r\n        account:v.username,\r\n        password:v.password\r\n      }\r\n      // let res = await getInterfaceData('login', params);\r\n      // console.log(res)\r\n      // if (res.code == 1) {\r\n        message.success(\"登录成功\");\r\n        setTimeout(() => {\r\n          props.navigate('/cockpit');\r\n        }, 800);\r\n        let data = {\r\n          account: \"xuw0471\",\r\n          author: \"1\",\r\n          department: \"900018230\",\r\n          dingdingUserId: \"219911601\",\r\n          id: 1651,\r\n          passWord: \"tw123456\",\r\n          phone: \"13605718440\",\r\n          username: \"徐伟\"\r\n        };\r\n        Cookies.set(TOKEN_PARAMS,\"123\",{ expires: 7 })\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n        localStorage.setItem(\"Author\",\"admin\")\r\n      // } else {\r\n      //   message.error(res.msg);\r\n      //   Cookies.remove(TOKEN_PARAMS);\r\n      // }\r\n      setLoading(false)\r\n    }\r\n    useEffect(()=>{\r\n      if(Cookies.get(TOKEN_PARAMS)) props.navigate('/');\r\n      else closeWebsocket()\r\n    },[])\r\n    return (\r\n      <div className={style.loginPage}>\r\n        <div className={style.main}>\r\n          <div className={style.title}>\r\n            <img src={require(\"@/asstes/images/icon.png\")}/>\r\n            <span>登录</span>\r\n          </div>\r\n          <div className={style.formCon}>\r\n          <Form\r\n             form={loginForm}\r\n             labelCol={{ span: 0, }}\r\n             wrapperCol={{ span: 24, }}\r\n             \r\n          >\r\n            <Form.Item\r\n                label=\"\"\r\n                name=\"username\"\r\n                rules={[\r\n                  { required: true, message: \"\" },\r\n                  {\r\n                    validator: (_, value) => {\r\n                      let obj = checkAccount(value)\r\n                      if (obj.returnFlag) {\r\n                        return Promise.resolve()\r\n                      } else {\r\n                        return Promise.reject(obj.msg)\r\n                      }\r\n                    }\r\n                  }\r\n                ]}\r\n              >\r\n                <Input\r\n                  maxLength={20}\r\n                  style={{ height: \"40px\", backgroundColor: \"#fff\", borderTop: \"none\", borderLeft: \"none\", borderRight: \"none\" }} placeholder=\"账号\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"\"\r\n                name=\"password\"\r\n                rules={[\r\n                  { required: true, message: '', },\r\n                  {\r\n                    validator: (_, value) => {\r\n                      let username = loginForm.getFieldsValue().username;\r\n                      let obj = checkPassword(username, value)\r\n                      if (obj.returnFlag) {\r\n                        return Promise.resolve()\r\n                      } else {\r\n                        return Promise.reject(obj.msg)\r\n                      }\r\n                    }\r\n                  }\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  maxLength={16}\r\n                  style={{ height: \"40px\", backgroundColor: \"#fff\", borderTop: \"none\", borderLeft: \"none\", borderRight: \"none\" }} placeholder=\"密码\" />\r\n              </Form.Item>\r\n              <Button loading={loading} onClick={handleSubmit} className={style.loginBtn} type=\"primary\" htmlType=\"submit\">登录</Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Login"],"names":["props","loading","setLoading","useState","loginForm","Form","useForm","login","async","v","username","password","message","success","setTimeout","navigate","Cookies","set","TOKEN_PARAMS","expires","localStorage","setItem","JSON","stringify","account","author","department","dingdingUserId","id","passWord","phone","useEffect","get","closeWebsocket","_jsx","className","style","children","_jsxs","src","require","form","labelCol","span","wrapperCol","Item","label","name","rules","required","validator","_","value","obj","checkAccount","returnFlag","Promise","resolve","reject","msg","Input","maxLength","height","backgroundColor","borderTop","borderLeft","borderRight","placeholder","getFieldsValue","checkPassword","Password","Button","onClick","handleSubmit","validateFields","then","res","catch","error","console","log","type","htmlType"],"sourceRoot":""}